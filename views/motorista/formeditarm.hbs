<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edição do Motorista</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="/gerenciamento/style.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body>
    {{#> base}}
    {{/base}}
    <div class="container">
        <div class="card mt-4 shadow-lg">
            <div class="card-header text-white text-center bg-primary">
                <h2>EDITAR MOTORISTA</h2>
            </div>
            <div class="card-body">
                <form method="POST" action="http://localhost:3000/motorista" id="motoristaForm">
                    <div class="row">
                        <div class="col-md-6">
                            <label for="nome" style="color: #6a708a; font-weight: 500;">Nome Completo</label>
                            <input type="text" class="form-control" id="nome" name="nome" placeholder="Antônio Fonseca Novais" maxlength="50" required>
                        </div>
                        <div class="col-md-6">
                            <label for="cpf_motorista" style="color: #6a708a; font-weight: 500;">Cadastro de Pessoa Física (CPF)</label>
                            <input type="text" class="form-control" id="cpf_motorista" name="cpf_motorista" placeholder="62005253501" maxlength="11" minlength="11" required>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <label for="telefone" style="color: #6a708a; font-weight: 500;">Telefone</label>
                            <input type="text" class="form-control" id="telefone" name="telefone" placeholder="77981371290" maxlength="11" minlength="11" required>
                        </div>
                        <div class="col-md-6">
                            <label for="registro_cnh" style="color: #6a708a; font-weight: 500;">Registro da Carteira Nacional de Habilitação (CNH)</label>
                            <input type="text" class="form-control" id="registro_cnh" name="registro_cnh" maxlength="11" minlength="11" placeholder="76211889218" required>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <label for="endereco" style="color: #6a708a; font-weight: 500;">Endereço</label>
                            <input type="text" class="form-control" id="endereco" name="endereco" placeholder="Avenida Lapa, 1001" maxlength="50" required>
                        </div>
                        <div class="col-md-6">
                            <label for="data_admissao" style="color: #6a708a; font-weight: 500;">Data de Admissão</label>
                            <input type="date" class="form-control" id="data_admissao" name="data_admissao" required>
                        </div>
                    </div>

                    <div class="text-center mt-4">
                        <button type="submit" class="btn btn-success btn-pequeno">SALVAR</button>
                    </div>
                </form>
            </divcd>
        </div>
    </div>


    <script>
    // Get numero_conta from URL path
    const getCPFmotorista = () => {
        const pathParts = window.location.pathname.split('/');
        return pathParts[pathParts.length - 1];
    };

    async function fetchMotoristaData() {
        try {
            const cpf_motorista = getCPFmotorista();
            const response = await fetch(`http://localhost:3000/motorista/${cpf_motorista}`, {
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('token')}`
                }
            });

            if (!response.ok) {
                const error = await response.json();
                throw new Error(error.message || 'Failed to fetch motorista');
            }

            const motorista = await response.json();
            
            document.getElementById('nome').value = motorista.nome;
            document.getElementById('cpf_motorista').value = motorista.cpf_motorista;
            document.getElementById('telefone').value = motorista.telefone;
            document.getElementById('registro_cnh').value = motorista.registro_cnh;
            document.getElementById('endereco').value = motorista.endereco;
            
            // Handle date safely
            const rawDate = cartao.data_admissao || new Date().toISOString();
            document.getElementById('data_admissao').value = 
                new Date(rawDate).toISOString().split('T')[0];

        } catch (error) {
            console.error('Erro ao buscar dados do motorista:', error);
            alert(error.message || 'Erro ao carregar dados do motorista');
        }
    }

    document.getElementById('editMotoristaForm').addEventListener('submit', async (event) => {
        event.preventDefault();
        
        const cpf_motorista = getCPFmotorista();
        const formData = {
            nome:  document.getElementById('nome').value,
            cpf_motorista: document.getElementById('cpf_motorista').value,
            telefone: document.getElementById('telefone').value,
            registro_cnh: document.getElementById('registro_cnh').value,
            endereco: document.getElementById('endereco').value,
            data_admissao: document.getElementById('data_admissao').value
        };

        formData.data_admissao = new Date(formData.data_admissao).toISOString();

        try {
            const response = await fetch(`http://localhost:3000/motorista/${cpf_motorista}`, {
                method: 'PATCH',
                headers: { 
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${localStorage.getItem('token')}`
                },
                body: JSON.stringify(formData)
            });

            if (!response.ok) {
                const error = await response.json();
                throw new Error(error.message || 'Update failed');
            }

            alert('Motorista atualizado com sucesso!');
            window.location.href = 'http://localhost:3000';
            
        } catch (error) {
            console.error('Erro ao atualizar o motorista:', error);
            alert(error.message || 'Erro ao atualizar o motorista');
        }
    });

    document.addEventListener('DOMContentLoaded', fetchCartaoData);
</script>
</body>
</html>